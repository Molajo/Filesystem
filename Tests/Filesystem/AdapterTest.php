<?php
namespace Tests\Filesystem;

use \PHPUnit_Framework_TestCase;

use Molajo\Filesystem\Adapter;

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.0 on 2013-01-26 at 06:27:20.
 */
class AdapterTest extends PHPUnit_Framework_TestCase
{
    /**
     * @var Object - Adaptor Factory
     */
    protected $object;

    /**
     * @var Adapter
     */
    protected $adapter;

    /**
     * @var $Path
     */
    protected $path;

    /**
     * @var $Class
     */
    protected $options = array();

    /**
     * Initialises Adapter
     */
    protected function setUp()
    {
        $this->options = array(
            'adapter_name' => 'Local',
            'root'         => ROOT_FOLDER,
            'persistence'  => true
        );
        $this->path    = BASE_FOLDER . '/Tests/test1.txt';

        $this->object = new Adapter($this->path, $this->options);

        $this->assertObjectHasAttribute('path', $this->object);
        $this->assertObjectHasAttribute('adapter_name', $this->object);
        $this->assertObjectHasAttribute('adapter', $this->object);

        unset($this->object);

        return;
    }


    /**
     * @covers Molajo\Filesystem\Adapter::setAdapter
     */
    public function testSetAdapter()
    {
        $this->options = array(
            'adapter_name' => 'Local',
            'root'         => ROOT_FOLDER,
            'persistence'  => true
        );
        $this->path    = BASE_FOLDER . '/Tests/test1.txt';

        $this->object = new Adapter($this->path, $this->options = array());

        $this->adapter = $this->object->setAdapter();

        $this->assertObjectHasAttribute('options', $this->adapter);
        $this->assertObjectHasAttribute('root', $this->adapter);
        $this->assertObjectHasAttribute('persistence', $this->adapter);
        $this->assertObjectHasAttribute('absolute_path', $this->adapter);

        unset($this->object);
        unset($this->adapter);

        return;

    }

    /**
     * @covers Molajo\Filesystem\Adapter::getAdapter
     */
    public function testGetAdapter()
    {
        $this->options = array(
            'adapter_name' => 'Local',
            'root'         => ROOT_FOLDER,
            'persistence'  => true
        );
        $this->path    = BASE_FOLDER . '/Tests/test1.txt';
        $this->object  = new Adapter($this->path, $this->options = array());
        $this->adapter = $this->object->getAdapter();

        $this->assertObjectHasAttribute('options', $this->adapter);
        $this->assertObjectHasAttribute('root', $this->adapter);
        $this->assertObjectHasAttribute('persistence', $this->adapter);
        $this->assertObjectHasAttribute('absolute_path', $this->adapter);

        unset($this->object);
        unset($this->adapter);

        return;
    }

    public function testRead()
    {
        $this->options = array(
            'adapter_name' => 'Local',
            'root'         => ROOT_FOLDER,
            'persistence'  => true
        );
        $this->path    = BASE_FOLDER . '/Tests/test1.txt';
        $this->object  = new Adapter($this->path, $this->options = array());
        $this->adapter = $this->object->getAdapter();

        $data = $this->adapter->read();
        $this->assertEquals('yabba, dabba, doo', trim($data));

        unset($this->object);
        unset($this->adapter);

        return;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {

    }

}
