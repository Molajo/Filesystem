<?php
namespace Local;

use Exception;
use Molajo\Filesystem\Exception\FilesystemException;
use Molajo\Filesystem\Exception\LocalFilesystemException;
use Molajo\Filesystem\Connection;

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.0 on 2013-01-26 at 06:27:20.
 */
class LocalMetadataTest extends Data
{
    /**
     * @var $adapter Object
     */
    protected $adapter;

    /**
     * Initialises Adapter
     */
    protected function setUp()
    {
        parent::setUp();

        $this->filesystem_type = 'Local';
        $this->action          = 'Metadata';
        $this->path            = BASE_FOLDER . '/.dev/Tests/Data/test1.txt';
        $this->options         = array();

        $this->adapter = new Connection();
    }

    /**
     * @covers Molajo\Filesystem\Type\Local::read
     */
    public function testMetadataSuccessful()
    {
        $metadata = $this->adapter->getMetadata($this->path);

        var_dump($metadata);
        die;

        $this->assertEquals('Local', $metadata->filesystem_type);
        $this->assertEquals('/', $metadata->root);
        $this->assertEquals(true, $metadata->persistence);
        $this->assertEquals(0755, $metadata->default_directory_permissions);
        $this->assertEquals(0644, $metadata->default_file_permissions);
        $this->assertEquals(false, $metadata->read_only);
        $this->assertEquals(true, $metadata->is_readable);
        $this->assertEquals(true, $metadata->is_writable);
        $this->assertEquals(false, $metadata->is_executable);

        $this->assertEquals(
            BASE_FOLDER . '/.dev/Tests/Data/test1.txt',
            $metadata->path
        );
        $this->assertEquals(true, $metadata->exists);
        $this->assertEquals(
            BASE_FOLDER . '/.dev/Tests/Data/test1.txt',
            $metadata->absolute_path
        );
        $this->assertEquals(true, $metadata->is_absolute_path);
        $this->assertEquals(false, $metadata->is_directory);
        $this->assertEquals(true, $metadata->is_file);
        $this->assertEquals(false, $metadata->is_link);
        $this->assertEquals('file', $metadata->type);
        $this->assertEquals('test1.txt', $metadata->name);
        $this->assertEquals(
            BASE_FOLDER . '/.dev/Tests/Data',
            $metadata->parent
        );
        $this->assertEquals('txt', $metadata->extension);
        $this->assertEquals(18, $metadata->size);
        $this->assertEquals('text/plain; charset=us-ascii', $metadata->mime_type);


        return;
    }

    /**
     * @covers Molajo\Filesystem\Type\Local::read
     * @expectedException Molajo\Filesystem\Exception\FilesystemException
     */
    public function testMetadataUnsuccessful()
    {
        $this->path = BASE_FOLDER . '/.dev/Tests/Data/testreally-is-not-there.txt';
        $results = $this->adapter->read($this->path);

        return;
    }

    /**
     * @covers Molajo\Filesystem\Type\Local::read
     * @expectedException Molajo\Filesystem\Exception\FilesystemException
     */
    public function testMetadataNotAFile()
    {
        $this->path = BASE_FOLDER . '/.dev/Tests';
        $results = $this->adapter->read($this->path);

        return;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
        parent::tearDown();
    }
}
